{"mappings":"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","sources":["src/script.js"],"sourcesContent":["let notes = [];\nlet noteId = 0;\nlet selectedNote = null;\n\nconst board = document.getElementById('board');\nconst addNoteBtn = document.getElementById('addNoteBtn');\n\n// Charger les notes depuis le localStorage lors du chargement de la page\nwindow.onload = () => {\n    const savedNotes = JSON.parse(localStorage.getItem('notes'));\n    if (savedNotes) {\n        notes = savedNotes;\n        notes.forEach(note => {\n            createNoteElement(note);\n            if (note.id >= noteId) {\n                noteId = note.id + 1;\n            }\n        });\n    }\n};\n\n// Fonction pour ajouter un nouveau post-it\naddNoteBtn.addEventListener('click', () => {\n    const note = {\n        id: noteId++,\n        content: '',\n        top: 100,\n        left: 100,\n        color: '#fff475' // Couleur par défaut\n    };\n    notes.push(note);\n    createNoteElement(note);\n    saveNotes();\n});\n\n// Fonction pour créer l'élément DOM d'une note\nfunction createNoteElement(note) {\n    const noteElem = document.createElement('div');\n    noteElem.classList.add('note');\n    noteElem.style.top = note.top + 'px';\n    noteElem.style.left = note.left + 'px';\n    noteElem.setAttribute('data-id', note.id);\n\n    // Appliquer la couleur du post-it\n    noteElem.style.backgroundColor = note.color || '#fff475';\n\n    // Créer le bouton de suppression\n    const deleteBtn = document.createElement('button');\n    deleteBtn.textContent = '×';\n    deleteBtn.classList.add('delete-btn');\n    deleteBtn.addEventListener('click', (e) => {\n        e.stopPropagation(); // Empêche le clic de se propager au post-it\n        board.removeChild(noteElem);\n        notes = notes.filter(n => n.id !== note.id);\n        saveNotes();\n    });\n\n    // Créer la zone de texte\n    const textarea = document.createElement('textarea');\n    textarea.value = note.content;\n\n    textarea.addEventListener('input', () => {\n        note.content = textarea.value;\n        saveNotes();\n    });\n\n    noteElem.appendChild(deleteBtn);\n    noteElem.appendChild(textarea);\n    board.appendChild(noteElem);\n\n    // Gestion de la sélection du post-it\n    noteElem.addEventListener('click', (e) => {\n        e.stopPropagation(); // Empêche le clic de se propager au parent\n        selectNote(noteElem, note);\n    });\n\n    // Gérer le déplacement de la note\n    noteElem.addEventListener('mousedown', (e) => {\n        const shiftX = e.clientX - noteElem.getBoundingClientRect().left;\n        const shiftY = e.clientY - noteElem.getBoundingClientRect().top;\n\n        function moveAt(pageX, pageY) {\n            note.left = pageX - shiftX;\n            note.top = pageY - shiftY;\n            noteElem.style.left = note.left + 'px';\n            noteElem.style.top = note.top + 'px';\n        }\n\n        function onMouseMove(e) {\n            moveAt(e.pageX, e.pageY);\n        }\n\n        document.addEventListener('mousemove', onMouseMove);\n\n        document.addEventListener('mouseup', () => {\n            document.removeEventListener('mousemove', onMouseMove);\n            saveNotes();\n        }, { once: true });\n    });\n\n    noteElem.ondragstart = () => {\n        return false;\n    };\n}\n\n// Fonction pour sauvegarder les notes dans le localStorage\nfunction saveNotes() {\n    localStorage.setItem('notes', JSON.stringify(notes));\n}\n\n// Fonction pour sélectionner un post-it\nfunction selectNote(noteElem, note) {\n    // Désélectionner le post-it précédent\n    if (selectedNote && selectedNote.elem !== noteElem) {\n        selectedNote.elem.classList.remove('selected');\n    }\n\n    // Sélectionner le nouveau post-it\n    noteElem.classList.add('selected');\n    selectedNote = { elem: noteElem, data: note };\n}\n\n// Désélectionner le post-it si on clique en dehors\ndocument.addEventListener('click', () => {\n    if (selectedNote) {\n        selectedNote.elem.classList.remove('selected');\n        selectedNote = null;\n    }\n});\n\n// Gérer le clic sur les boutons de couleur\nconst colorPickers = document.querySelectorAll('.color-picker');\ncolorPickers.forEach(picker => {\n    picker.addEventListener('click', () => {\n        if (selectedNote) {\n            const color = picker.getAttribute('data-color');\n            selectedNote.elem.style.backgroundColor = color;\n            selectedNote.data.color = color;\n            saveNotes();\n        }\n    });\n});\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}